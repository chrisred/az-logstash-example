{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "1918435143581417991"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Selects the resource group location with the default value."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('logstash{0}', substring(uniqueString(resourceGroup().id), 0, 5))]",
      "metadata": {
        "description": "Generates a unique name with the default value."
      }
    },
    "storageAccountShareName": {
      "type": "string",
      "defaultValue": "logstash-config",
      "metadata": {
        "description": "The name of the Azure Files share."
      }
    },
    "logAnalyticsAccountName": {
      "type": "string",
      "defaultValue": "[format('logstash-{0}', substring(uniqueString(resourceGroup().id), 0, 5))]",
      "metadata": {
        "description": "Generates a unique name with the default value."
      }
    },
    "dataCollectionEndpointName": {
      "type": "string",
      "defaultValue": "[format('logstash-{0}', substring(uniqueString(resourceGroup().id), 0, 5))]",
      "metadata": {
        "description": "Generates a unique name with the default value."
      }
    },
    "dataCollectionRuleName": {
      "type": "string",
      "defaultValue": "[format('logstash-{0}', substring(uniqueString(resourceGroup().id), 0, 5))]",
      "metadata": {
        "description": "Generates a unique name with the default value."
      }
    },
    "containerAppEnvironmentName": {
      "type": "string",
      "defaultValue": "[format('logstash-{0}', substring(uniqueString(resourceGroup().id), 0, 5))]",
      "metadata": {
        "description": "Generates a unique name with the default value."
      }
    },
    "containerAppName": {
      "type": "string",
      "defaultValue": "[format('logstash-{0}', substring(uniqueString(resourceGroup().id), 0, 5))]",
      "metadata": {
        "description": "Generates a unique name with the default value."
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "logstash",
      "metadata": {
        "description": "The name of the container."
      }
    },
    "containerCpu": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "The vCPU allocation that meets the consumption workload profile requirements."
      }
    },
    "containerMemory": {
      "type": "string",
      "defaultValue": "2",
      "metadata": {
        "description": "The Memory allocation that meets the consumption workload profile requirements."
      }
    },
    "containerImage": {
      "type": "string",
      "defaultValue": "docker.elastic.co/logstash/logstash-oss:8.14.3",
      "metadata": {
        "description": "The URI for the container image, see docker.elastic.co/r/logstash for latest images."
      }
    },
    "logstashInputPort": {
      "type": "string",
      "defaultValue": "1066",
      "metadata": {
        "description": "The port the Logstash pipeline will listen on, and the target port for ingress traffic to the Container App."
      }
    },
    "logstashInputUser": {
      "type": "string",
      "defaultValue": "logstash",
      "metadata": {
        "description": "The user ID for Logstash pipeline basic authentication."
      }
    },
    "logstashInputPass": {
      "type": "securestring",
      "metadata": {
        "description": "The password for Logstash pipeline basic authentication."
      }
    },
    "applicationClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID of the application given access to the DCR."
      }
    },
    "applicationSecretValue": {
      "type": "securestring",
      "metadata": {
        "description": "The secret value of the application."
      }
    }
  },
  "variables": {
    "tableName": "Logstash_CL"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('storageAccountShareName'))]",
      "properties": {
        "accessTier": "TransactionOptimized"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2022-10-01",
      "name": "[format('{0}/{1}', parameters('logAnalyticsAccountName'), variables('tableName'))]",
      "properties": {
        "schema": {
          "name": "[variables('tableName')]",
          "columns": [
            {
              "name": "TimeGenerated",
              "type": "dateTime"
            },
            {
              "name": "RawData",
              "type": "string"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments/storages",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('containerAppEnvironmentName'), parameters('storageAccountShareName'))]",
      "properties": {
        "azureFile": {
          "accountName": "[parameters('storageAccountName')]",
          "shareName": "[parameters('storageAccountShareName')]",
          "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]",
          "accessMode": "ReadWrite"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvironmentName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('storageAccountName'), 'default', parameters('storageAccountShareName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true
      }
    },
    {
      "type": "Microsoft.Insights/dataCollectionEndpoints",
      "apiVersion": "2023-03-11",
      "name": "[parameters('dataCollectionEndpointName')]",
      "location": "[parameters('location')]",
      "kind": "string",
      "properties": {
        "networkAcls": {
          "publicNetworkAccess": "Enabled"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[parameters('logAnalyticsAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2023-03-11",
      "name": "[parameters('dataCollectionRuleName')]",
      "location": "[parameters('location')]",
      "properties": {
        "dataCollectionEndpointId": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName'))]",
        "destinations": {
          "logAnalytics": [
            {
              "name": "la-workspace-destination",
              "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsAccountName'))]"
            }
          ]
        },
        "dataFlows": [
          {
            "outputStream": "[format('Custom-{0}', variables('tableName'))]",
            "streams": [
              "[format('Custom-{0}', variables('tableName'))]"
            ],
            "destinations": [
              "la-workspace-destination"
            ],
            "transformKql": "source | extend TimeGenerated = now()"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsAccountName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('logAnalyticsAccountName'), variables('tableName'))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-05-01",
      "name": "[parameters('containerAppEnvironmentName')]",
      "location": "[parameters('location')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsAccountName')), '2023-09-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsAccountName')), '2023-09-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[parameters('containerAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "environmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvironmentName'))]",
        "template": {
          "containers": [
            {
              "name": "[parameters('containerName')]",
              "image": "[parameters('containerImage')]",
              "command": [
                "/bin/bash",
                "-c",
                "logstash-plugin install logstash-filter-json_encode && logstash-plugin install microsoft-sentinel-log-analytics-logstash-output-plugin && logstash"
              ],
              "resources": {
                "cpu": "[json(parameters('containerCpu'))]",
                "memory": "[format('{0}Gi', parameters('containerMemory'))]"
              },
              "volumeMounts": [
                {
                  "volumeName": "[parameters('storageAccountShareName')]",
                  "mountPath": "/usr/share/logstash/config/"
                }
              ],
              "env": [
                {
                  "name": "INPUT_PORT",
                  "value": "[parameters('logstashInputPort')]"
                },
                {
                  "name": "INPUT_USER",
                  "value": "[parameters('logstashInputUser')]"
                },
                {
                  "name": "INPUT_PASS",
                  "secretRef": "input-pass"
                },
                {
                  "name": "OUTPUT_TENANT_ID",
                  "value": "[subscription().tenantId]"
                },
                {
                  "name": "OUTPUT_APP_ID",
                  "value": "[parameters('applicationClientId')]"
                },
                {
                  "name": "OUTPUT_APP_SECRET",
                  "secretRef": "output-app-secret"
                },
                {
                  "name": "OUTPUT_DCE",
                  "value": "[reference(resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName')), '2023-03-11').logsIngestion.endpoint]"
                },
                {
                  "name": "OUTPUT_DCR_ID",
                  "value": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRuleName')), '2023-03-11').immutableId]"
                },
                {
                  "name": "OUTPUT_DCR_STREAM",
                  "value": "[format('Custom-{0}', variables('tableName'))]"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 0,
            "maxReplicas": 1
          },
          "volumes": [
            {
              "name": "[parameters('storageAccountShareName')]",
              "storageName": "[parameters('storageAccountShareName')]",
              "storageType": "AzureFile"
            }
          ]
        },
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": "[int(parameters('logstashInputPort'))]"
          },
          "secrets": [
            {
              "name": "input-pass",
              "value": "[parameters('logstashInputPass')]"
            },
            {
              "name": "output-app-secret",
              "value": "[parameters('applicationSecretValue')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvironmentName'))]",
        "[resourceId('Microsoft.App/managedEnvironments/storages', parameters('containerAppEnvironmentName'), parameters('storageAccountShareName'))]",
        "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName'))]",
        "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRuleName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('logAnalyticsAccountName'), variables('tableName'))]"
      ]
    }
  ]
}